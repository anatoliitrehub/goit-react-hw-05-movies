{"version":3,"file":"static/js/881.6d08d66c.chunk.js","mappings":"mOACA,EAA0B,wB,SCsE1B,EAjEe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4BC,EAAAA,EAAAA,IAAgB,IAA5C,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YAGRC,EAAAA,EAAAA,GAFiB,gBAEMH,EAAOI,IAAI,UAAUC,MAAK,SAAAC,GAC/CV,EAAUU,EACX,GACF,GAAC,CAACN,IAeH,OACE,+BACE,qBAASO,UAAWC,EAApB,WACE,kBAAMC,SAAU,SAAAC,GAAE,OAhBN,SAAAA,GAChBA,EAAGC,iBACHV,EAAU,CAAEW,MAAOf,EAAWgB,QAU/B,CAI2BC,CAAUJ,EAAd,EAAlB,WACE,kBACEK,KAAK,OACLC,MAAOnB,EACPoB,SAAU,SAAAP,GAAE,OAAIZ,EAAcY,EAAGQ,OAAOF,MAA5B,KAEd,mBAAQD,KAAK,SAAb,uBAGDpB,EAAOwB,SAAqC,IAA1BxB,EAAOwB,QAAQC,SAChC,4CAEDzB,EAAOwB,SAAqC,IAA1BxB,EAAOwB,QAAQC,QAAiBpB,EAAOI,IAAI,WAC5D,kDAEF,wBACGT,EAAOwB,SACNxB,EAAOwB,QAAQE,KAAI,SAAAC,GACjB,IAAMC,EAAW,WAAaD,EAAGE,GACjC,OACE,+BACE,yBACE,SAAC,KAAD,CAASC,GAAIF,EAAUG,MAAOlC,EAA9B,SACG8B,EAAGK,SAFCL,EAAGE,KAOjB,UAKZ,C,8GCjEDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEH1B,EAAS,mCAAG,WAAO2B,GAAP,0FAAmBlB,EAAnB,+BAA2B,GAA3B,SACVgB,EAAAA,EAAAA,IACNE,EAAY,CACfC,OAAQ,CACNC,QAASH,EACTjB,MAAAA,KAGHP,MAAK,SAAA4B,GACJ,OAAOA,EAAK3B,IACb,IACA4B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAXS,mFAAH,sDActBhC,EAAUmC,UAAY,CACpBR,WAAYS,IAAAA,OAAAA,WACZ3B,MAAO2B,IAAAA,O","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/getMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\"};","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { getMovies } from 'services/getMovies';\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [wordSearch, setWordSearch] = useState('');\n  const [search, setSearch] = useSearchParams('');\n\n  useEffect(()=>{\n    const requestPath = `/search/movie`;\n\n    getMovies(requestPath, search.get(\"query\")).then(data => {\n      setMovies(data);\n    });\n  },[search])\n\n  const getSearch = ev => {\n    ev.preventDefault();\n    setSearch({ query: wordSearch.trim() });\n    // const requestPath = `/search/movie`;\n\n    // getMovies(requestPath, wordSearch.trim()).then(data => {\n    //   setMovies(data);\n    // });\n\n    \n\n    // console.log(\"movies\");\n  };\n  return (\n    <>\n      <section className={s.section}>\n        <form onSubmit={ev => getSearch(ev)}>\n          <input\n            type=\"text\"\n            value={wordSearch}\n            onChange={ev => setWordSearch(ev.target.value)}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        {movies.results && movies.results.length !== 0 && (\n          <h1>Search results:</h1>\n        )}\n        {movies.results && movies.results.length === 0 && (search.get(\"query\"))&& (\n          <h1>There are no results</h1>\n        )}\n        <ul>\n          {movies.results &&\n            movies.results.map(el => {\n              const fullPath = `/movies/` + el.id;\n              return (\n                <>\n                  <li key={el.id}>\n                    <NavLink to={fullPath} state={location}>\n                      {el.title}\n                    </NavLink>\n                  </li>\n                </>\n              );\n            })}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// import clsx from \"clsx\";\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6dacb83bbdfc4398c50bae5501054b2f';\n\nexport const getMovies = async (appendPath, query = '') => {\n  return await axios\n    .get(appendPath, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(resp => {\n      return resp.data;\n    })\n    .catch(error => console.log(error));\n};\n\ngetMovies.propTypes = {\n  appendPath: PropTypes.string.isRequired,\n  query: PropTypes.string,\n};\n"],"names":["location","useLocation","useState","movies","setMovies","wordSearch","setWordSearch","useSearchParams","search","setSearch","useEffect","getMovies","get","then","data","className","s","onSubmit","ev","preventDefault","query","trim","getSearch","type","value","onChange","target","results","length","map","el","fullPath","id","to","state","title","axios","API_KEY","appendPath","params","api_key","resp","catch","error","console","log","propTypes","PropTypes"],"sourceRoot":""}