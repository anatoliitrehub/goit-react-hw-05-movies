{"version":3,"file":"static/js/135.9a540089.chunk.js","mappings":"mOACA,GAAgB,QAAU,8BAA8B,WAAa,iCAAiC,YAAc,kCAAkC,UAAY,gCAAgC,MAAQ,4BAA4B,UAAY,gCAAgC,WAAa,kC,SCoG/R,EAxFqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAqBjB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,UAAYP,GAEhCQ,EAAAA,EAAAA,GAAUD,GAAaE,MAAK,SAAAC,GAC1BX,EAASW,EACV,GACF,GAAE,CAACV,KAMF,iCACE,qBAASW,UAAWC,EAAAA,QAApB,WACE,mBACED,UAAWC,EAAAA,WACXC,QAAS,wBAAMX,EAAQ,UAACE,EAASU,aAAV,QAAmB,IAAjC,EAFX,sBAMA,iBAAKH,UAAWC,EAAAA,YAAhB,WACE,gBAAKD,UAAWC,EAAAA,UAAhB,SACGd,EAAMiB,cACL,gBACEJ,UAAWC,EAAAA,MACXI,IA/BA,oDA+BgBlB,EAAMiB,YACtBE,IAAKnB,EAAMoB,WAKjB,iBAAKP,UAAWC,EAAAA,UAAhB,WACE,wBAAKd,EAAMoB,QACVpB,EAAMqB,cAAmC,IAArBrB,EAAMqB,eACzB,wCAAgBC,KAAKC,MAAM,GAAKvB,EAAMqB,cAAtC,QAEF,uCACA,uBAAIrB,EAAMwB,YACV,qCACA,eAAIX,UAAWC,EAAAA,WAAf,SACGd,EAAMyB,QACLzB,EAAMyB,OAAOC,KAAI,SAAAC,GACf,OACE,eAAId,UAAWC,EAAAA,WAAf,SACGa,EAAGC,MAD4BD,EAAGE,GAIxC,gBAMX,qBAAShB,UAAWC,EAAAA,QAApB,WAEE,iDACA,2BACE,yBACE,SAAC,KAAD,CAASgB,GAAG,OAAOd,MAAOV,EAASU,MAAnC,qBAEF,yBACE,SAAC,KAAD,CAASc,GAAG,UAAUd,MAAOV,EAASU,MAAtC,2BAGJ,SAAC,KAAD,SAIP,C,8GC3FDe,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHtB,EAAS,mCAAG,WAAOuB,GAAP,0FAAmBC,EAAnB,+BAA2B,GAA3B,SACVH,EAAAA,EAAAA,IACNE,EAAY,CACfE,OAAQ,CACNC,QAASJ,EACTE,MAAAA,KAGHvB,MAAK,SAAA0B,GACJ,OAAOA,EAAKzB,IACb,IACA0B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAXS,mFAAH,sDActB7B,EAAUgC,UAAY,CACpBT,WAAYU,IAAAA,OAAAA,WACZT,MAAOS,IAAAA,O","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/getMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__CCh0q\",\"buttonBack\":\"MovieDetails_buttonBack__sNwb2\",\"infoWrapper\":\"MovieDetails_infoWrapper__4SlYR\",\"imageWrap\":\"MovieDetails_imageWrap__tkCQJ\",\"image\":\"MovieDetails_image__c1FeV\",\"infoMovie\":\"MovieDetails_infoMovie__fBWw9\",\"genresList\":\"MovieDetails_genresList__2o809\"};","import { useEffect, useState } from 'react';\nimport {\n  useParams,\n  Outlet,\n  NavLink,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovies } from 'services/getMovies';\nimport s from './MovieDetails.module.css';\nimport PropTypes from 'prop-types';\n// import MovieInfo from './MovieInfo';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // console.log(\"details\",location.state.from)\n  // const location = useLocation();\n  const servPath = `https://www.themoviedb.org/t/p/w220_and_h330_face`;\n  // console.log(movieId)\n  // const movies = getMovies(502)\n  // console.log(\"movies details\")\n  // const requestPath = `/movie/`+movieId;\n\n  useEffect(() => {\n    const requestPath = `/movie/` + movieId;\n\n    getMovies(requestPath).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  // console.log(movieId)\n  // console.log(movie);\n\n  return (\n    <>\n      <section className={s.section}>\n        <button\n          className={s.buttonBack}\n          onClick={() => navigate(location.state ?? '/')}\n        >\n          Go back\n        </button>\n        <div className={s.infoWrapper}>\n          <div className={s.imageWrap}>\n            {movie.poster_path && (\n              <img\n                className={s.image}\n                src={servPath + movie.poster_path}\n                alt={movie.title}\n              />\n            )}\n          </div>\n\n          <div className={s.infoMovie}>\n            <h1>{movie.title}</h1>\n            {movie.vote_average&&movie.vote_average!==0 && (\n              <p>User score: {Math.floor(10 * movie.vote_average)}%</p>\n            )}\n            <h2>Overview:</h2>\n            <p>{movie.overview}</p>\n            <h3>Genres:</h3>\n            <ul className={s.genresList}>\n              {movie.genres &&\n                movie.genres.map(el => {\n                  return (\n                    <li className={s.genresItem} key={el.id}>\n                      {el.name}\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        </div>\n      </section>\n      {/* <p>ID: {movieId}</p> */}\n      <section className={s.section}>\n        {/* {movie&&<MovieInfo movie={movie}/>} */}\n        <p>Addition information</p>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={location.state}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={location.state}>Reviews</NavLink>\n          </li>\n        </ul>\n        <Outlet />\n      </section>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n// import clsx from \"clsx\";\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6dacb83bbdfc4398c50bae5501054b2f';\n\nexport const getMovies = async (appendPath, query = '') => {\n  return await axios\n    .get(appendPath, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(resp => {\n      return resp.data;\n    })\n    .catch(error => console.log(error));\n};\n\ngetMovies.propTypes = {\n  appendPath: PropTypes.string.isRequired,\n  query: PropTypes.string,\n};\n"],"names":["useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","requestPath","getMovies","then","data","className","s","onClick","state","poster_path","src","alt","title","vote_average","Math","floor","overview","genres","map","el","name","id","to","axios","API_KEY","appendPath","query","params","api_key","resp","catch","error","console","log","propTypes","PropTypes"],"sourceRoot":""}