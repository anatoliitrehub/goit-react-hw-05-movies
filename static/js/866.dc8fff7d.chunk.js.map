{"version":3,"file":"static/js/866.dc8fff7d.chunk.js","mappings":"2NACA,EAA0B,yB,SCkD1B,EA7CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,iBAAaN,EAAb,aACjBO,EAAAA,EAAAA,GAAUD,GAAaE,MAAK,SAAAC,GAC1BL,EAASK,EACV,GACF,GAAE,CAACT,KAIF,+BACE,qBAASU,UAAWC,EAApB,UACGR,EAAMS,UAAYT,EAAMS,QAAQC,SAC/B,oEAEF,wBACGV,EAAMS,SACLT,EAAMS,QAAQE,KAAI,SAAAC,GAChB,OACE,+BACE,2BACE,wBAAKA,EAAGC,UAER,cAAGN,UAAU,UAAb,SAAwBK,EAAGE,WAC3B,eAAGP,UAAU,UAAb,mBACSK,EAAGG,WAAWC,MAAM,EAAG,SALzBJ,EAAGK,KAUjB,UAKZ,C,8GCzCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHf,EAAS,mCAAG,WAAOgB,GAAP,0FAAmBC,EAAnB,+BAA2B,GAA3B,SACVH,EAAAA,EAAAA,IACNE,EAAY,CACfE,OAAQ,CACNC,QAASJ,EACTE,MAAAA,KAGHhB,MAAK,SAAAmB,GACJ,OAAOA,EAAKlB,IACb,IACAmB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAXS,mFAAH,sDActBtB,EAAUyB,UAAY,CACpBT,WAAYU,IAAAA,OAAAA,WACZT,MAAOS,IAAAA,O","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","services/getMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Reviews_section__FTXUQ\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/getMovies';\nimport PropTypes from 'prop-types';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  //   const servPath = `https://www.themoviedb.org/t/p/w220_and_h330_face`;\n\n  useEffect(() => {\n    const requestPath = `/movie/${movieId}/reviews`;\n    getMovies(requestPath).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  //   console.log(movie.results)\n  return (\n    <>\n      <section className={s.section}>\n        {movie.results && !movie.results.length && (\n          <p>We don`t have any reviews to this movie</p>\n        )}\n        <ul>\n          {movie.results &&\n            movie.results.map(el => {\n              return (\n                <>\n                  <li key={el.id}>\n                    <h3>{el.author}</h3>\n                    {/* {el.author_details.avatar_path&&<img src={el.author_details.avatar_path.split('').slice(1).join('')} alt={el.author} />} */}\n                    <p className=\"content\">{el.content}</p>\n                    <p className=\"created\">\n                      Date: {el.created_at.slice(0, 10)}\n                    </p>\n                  </li>\n                </>\n              );\n            })}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n// import clsx from \"clsx\";\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6dacb83bbdfc4398c50bae5501054b2f';\n\nexport const getMovies = async (appendPath, query = '') => {\n  return await axios\n    .get(appendPath, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(resp => {\n      return resp.data;\n    })\n    .catch(error => console.log(error));\n};\n\ngetMovies.propTypes = {\n  appendPath: PropTypes.string.isRequired,\n  query: PropTypes.string,\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","requestPath","getMovies","then","data","className","s","results","length","map","el","author","content","created_at","slice","id","axios","API_KEY","appendPath","query","params","api_key","resp","catch","error","console","log","propTypes","PropTypes"],"sourceRoot":""}