{"version":3,"file":"static/js/881.36f13bbd.chunk.js","mappings":"0NACA,EAA0B,wB,SCuD1B,EAlDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAYA,OACE,+BACE,qBAASC,UAAWC,EAApB,WACE,kBAAMC,SAAU,SAAAC,GAAE,OAbN,SAAAA,GAChBA,EAAGC,kBAGHC,EAAAA,EAAAA,GAFiB,gBAEMP,EAAWQ,QAAQC,MAAK,SAAAC,GAC7CX,EAAUW,EACX,GAGF,CAI2BC,CAAUN,EAAd,EAAlB,WACE,kBACEO,KAAK,OACLC,MAAOb,EACPc,SAAU,SAAAT,GAAE,OAAIJ,EAAcI,EAAGU,OAAOF,MAA5B,KAEd,mBAAQD,KAAK,SAAb,uBAGDd,EAAOkB,SAAqC,IAA1BlB,EAAOkB,QAAQC,SAChC,4CAEDnB,EAAOkB,SAAqC,IAA1BlB,EAAOkB,QAAQC,SAChC,kDAEF,wBACGnB,EAAOkB,SACNlB,EAAOkB,QAAQE,KAAI,SAAAC,GACjB,IAAMC,EAAW,WAAaD,EAAGE,GACjC,OACE,+BACE,yBACE,SAAC,KAAD,CAASC,GAAIF,EAAb,SAAwBD,EAAGI,SADpBJ,EAAGE,KAKjB,UAKZ,C,8GCjDDG,EAAAA,EAAAA,SAAAA,QAAuB,+BACvB,IAAMC,EAAQ,mCAEDlB,EAAS,mCAAG,WAAOmB,GAAP,0FAAkBC,EAAlB,+BAAwB,GAAxB,SACRH,EAAAA,EAAAA,IAAWE,EAAY,CAChCE,OAAO,CACPC,QAAQJ,EACRE,MAAAA,KAEDlB,MAAK,SAAAqB,GAAI,OAAEA,EAAKpB,IAAP,IAAaqB,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,EAAd,IANf,mFAAH,sDAStBzB,EAAU4B,UAAY,CAClBT,WAAWU,IAAAA,OAAAA,WACXT,MAAMS,IAAAA,O","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/getMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\"};","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { getMovies } from 'services/getMovies';\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [wordSearch, setWordSearch] = useState('');\n\n  const getSearch = ev => {\n    ev.preventDefault();\n    const requestPath = `/search/movie`;\n\n    getMovies(requestPath, wordSearch.trim()).then(data => {\n      setMovies(data);\n    });\n\n    // console.log(movies);\n  };\n  return (\n    <>\n      <section className={s.section}>\n        <form onSubmit={ev => getSearch(ev)}>\n          <input\n            type=\"text\"\n            value={wordSearch}\n            onChange={ev => setWordSearch(ev.target.value)}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        {movies.results && movies.results.length !== 0 && (\n          <h1>Search results:</h1>\n        )}\n        {movies.results && movies.results.length === 0 && (\n          <h1>There are no results</h1>\n        )}\n        <ul>\n          {movies.results &&\n            movies.results.map(el => {\n              const fullPath = `/movies/` + el.id;\n              return (\n                <>\n                  <li key={el.id}>\n                    <NavLink to={fullPath}>{el.title}</NavLink>\n                  </li>\n                </>\n              );\n            })}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n// import clsx from \"clsx\";\nimport PropTypes from 'prop-types';\n\n\naxios.defaults.baseURL=\"https://api.themoviedb.org/3\";\nconst API_KEY=\"6dacb83bbdfc4398c50bae5501054b2f\";\n\nexport const getMovies = async (appendPath,query='') => {\n    return await axios.get((appendPath),{\n        params:{\n        api_key:API_KEY,\n        query\n        }\n    }).then(resp=>resp.data).catch(error=>console.log(error))\n};\n\ngetMovies.propTypes = {\n    appendPath:PropTypes.string.isRequired,\n    query:PropTypes.string\n}"],"names":["useState","movies","setMovies","wordSearch","setWordSearch","className","s","onSubmit","ev","preventDefault","getMovies","trim","then","data","getSearch","type","value","onChange","target","results","length","map","el","fullPath","id","to","title","axios","API_KEY","appendPath","query","params","api_key","resp","catch","error","console","log","propTypes","PropTypes"],"sourceRoot":""}